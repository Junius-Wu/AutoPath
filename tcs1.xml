<?xml version="1.0" encoding="UTF-8"?>

<TCS>
  <testcase/>
  <process>
    <operation>init_ardupilot()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_monitoring(uint8_t, uint8_t)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_range(unsigned short, unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_out()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_land_complete(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_land_complete_maybe(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>arm_motors_check()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>armed()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!mode_has_manual_throttle(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?reset_arming_counter()
      <input>copter.arm_check_throttle=84.00</input>
    </operation>
  </process>
  <process>
    <operation>read_radio()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_has_new_input(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_last_update_radio_ms(long)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_roll.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_pitch.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_yaw.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_throttle.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_enable()
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_throttle_and_failsafe()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?get_the_pwm()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_value()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!increase_radio_counter()
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10</input>
    </operation>
  </process>
  <process>
    <operation>?set_failsafe_radio_counter(int)
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10,copter.(e_counter)=4.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_failsafe_radio(bool)
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10,copter.(e_counter)=4.00</input>
    </operation>
  </process>
  <process>
    <operation>set_throttle_zero_flag(unsigned int)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!update_throttle_zero(bool)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_control_in=84.00</input>
    </operation>
  </process>
  <process>
    <operation>read_control_switch(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_switch_position()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_control_switch_last_edge_time()
      <input>copter.control_switch_state.last_switch_position=2.00,copter.control_switch_state.switch_position=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?get_desired_mode()
      <input>$Failed</input>
    </operation>
  </process>
  <process>
    <operation>!?set_mode(char)
      <input>$Failed</input>
    </operation>
  </process>
  <testcase/>
  <process>
    <operation>init_ardupilot()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_monitoring(uint8_t, uint8_t)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_range(unsigned short, unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_out()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_land_complete(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_land_complete_maybe(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>arm_motors_check()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>armed()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!mode_has_manual_throttle(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?reset_arming_counter()
      <input>copter.arm_check_throttle=84.00</input>
    </operation>
  </process>
  <process>
    <operation>read_radio()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_has_new_input(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_last_update_radio_ms(long)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_roll.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_pitch.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_yaw.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_throttle.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_enable()
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_throttle_and_failsafe()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?get_the_pwm()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_value()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!increase_radio_counter()
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10</input>
    </operation>
  </process>
  <process>
    <operation>?set_failsafe_radio_counter(int)
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10,copter.(e_counter)=4.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_failsafe_radio(bool)
      <input>-3-3 copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=0.10,copter.failsafe_config.failsafe_throttle_value=1.00,failsafe.radio=0.10,copter.(e_counter)=4.00</input>
    </operation>
  </process>
  <process>
    <operation>set_throttle_zero_flag(unsigned int)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?update_throttle_zero(bool)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00,tnow_ms-copter.last_nonzero_throttle_ms=484.00</input>
    </operation>
  </process>
  <testcase/>
  <process>
    <operation>init_ardupilot()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_monitoring(uint8_t, uint8_t)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_range(unsigned short, unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_out()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_land_complete(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_land_complete_maybe(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>arm_motors_check()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>armed()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!mode_has_manual_throttle(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?reset_arming_counter()
      <input>copter.arm_check_throttle=84.00</input>
    </operation>
  </process>
  <process>
    <operation>read_radio()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_has_new_input(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_last_update_radio_ms(long)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_roll.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_pitch.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_yaw.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>channel_throttle.radio_in=2200.00,copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>set_pwm(short)
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_enable()
      <input>copter.has_new_input=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_throttle_and_failsafe()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?get_the_pwm()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_value()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!decrease_radio_counter()
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=-4.600-2.900I,copter.failsafe_config.failsafe_throttle_value=2.100+1.700I,failsafe.radio=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?set_failsafe_radio_counter(int)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=3.300+1.600I,copter.failsafe_config.failsafe_throttle_value=-4.600-2.900I,failsafe.radio=1.00,copter.(e_counter)=-1.00</input>
    </operation>
  </process>
  <process>
    <operation>!set_failsafe_radio(bool)
      <input>copter.has_new_input=1.00,failsafe_config.radio=1.00,copter.receive_input.throttle_radio_in=-4.600-2.900I,copter.failsafe_config.failsafe_throttle_value=3.300+1.600I,failsafe.radio=1.00,copter.(e_counter)=-1.00,copter.failsafe.radio=1.00</input>
    </operation>
  </process>
  <testcase/>
  <process>
    <operation>init_ardupilot()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_monitoring(uint8_t, uint8_t)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_range(unsigned short, unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_out()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_land_complete(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_land_complete_maybe(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>arm_motors_check()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>armed()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!mode_has_manual_throttle(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?reset_arming_counter()
      <input>copter.arm_check_throttle=84.00</input>
    </operation>
  </process>
  <process>
    <operation>read_radio()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_has_new_input(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_last_update_radio_elapsed(long)
      <input>-3 copter.has_new_input=0.10</input>
    </operation>
  </process>
  <process>
    <operation>get_failsafe_throttle_enable()
      <input>-3 copter.has_new_input=0.10</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>-3-3 copter.has_new_input=0.10,copter.last_update_radio_elapsed=584.00,copter.failsafe_config.radio=1.00,copter.failsafe.radio=0.10</input>
    </operation>
  </process>
  <process>
    <operation>!set_failsafe_radio(bool)
      <input>-3-3 copter.has_new_input=0.10,copter.last_update_radio_elapsed=584.00,copter.failsafe_config.radio=1.00,copter.failsafe.radio=0.10</input>
    </operation>
  </process>
  <testcase/>
  <process>
    <operation>init_ardupilot()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_monitoring(uint8_t, uint8_t)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_angle(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_range(unsigned short, unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_type(unsigned char)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>set_default_dead_zone(unsigned short)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!init_rc_out()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?init()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!set_land_complete(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>?set_land_complete_maybe(bool)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>cout
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>arm_motors_check()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>get_the_control_in()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>armed()
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!mode_has_manual_throttle(unsigned int)
      <input>null</input>
    </operation>
  </process>
  <process>
    <operation>!increase_arming_counter()
      <input>-3 copter.arm_check_throttle=0.10,copter.arm_check_yaw=4067.00,copter.arming_counter=20.00</input>
    </operation>
  </process>
  <process>
    <operation>?init_arm_motors(bool)
      <input>-3 copter.arm_check_throttle=-18.00,copter.arm_check_yaw=4005.00,copter.arming_counter=20.00,copter.arm_check_motorstate=0.10</input>
    </operation>
  </process>
  <process>
    <operation>armed(bool)
      <input>-3 copter.arm_check_throttle=-18.00,copter.arm_check_yaw=4005.00,copter.arming_counter=20.00,copter.arm_check_motorstate=0.10</input>
    </operation>
  </process>
  <process>
    <operation>!reset_arming_counter()
      <input>-3-3 copter.arm_check_throttle=-18.00,copter.arm_check_yaw=4005.00,copter.arming_counter=20.00,copter.arm_check_motorstate=0.10,copter.init_arm_done=0.10</input>
    </operation>
  </process>
  <process>
    <operation>?reset_arming_counter()
      <input>-3-3-3 copter.arm_check_throttle=0.10,copter.mode_manual_throttle=0.10,copter.ap.land_complete=0.10</input>
    </operation>
  </process>
  <process>
    <operation>?increase_arming_counter()
      <input>copter.arm_check_throttle=-18.00,copter.arming_counter=-77.00</input>
    </operation>
  </process>
  <process>
    <operation>!init_disarm_motors()
      <input>-3 copter.arm_check_throttle=0.10,copter.mode_manual_throttle=1.00,copter.ap.land_complete=1.600-4.600I,copter.arming_counter=20.00,copter.arm_check_motorstate=1.00</input>
    </operation>
  </process>
  <process>
    <operation>?armed(bool)
      <input>-3 copter.arm_check_throttle=0.10,copter.mode_manual_throttle=1.00,copter.ap.land_complete=1.600-4.600I,copter.arming_counter=20.00,copter.arm_check_motorstate=1.00</input>
    </operation>
  </process>
  <process>
    <operation>!reset_arming_counter()
      <input>copter.arm_check_throttle=-18.00,copter.arm_check_yaw=-3995.00</input>
    </operation>
  </process>
</TCS>
